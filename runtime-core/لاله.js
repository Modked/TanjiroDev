import axios from 'axios';
import fetch from 'node-fetch';

const activeUsers = {};
const memory = {};
const repeatCount = {};

const handler = (m) => m;

handler.all = async function (m) {
  const userId = m.sender; // ุฑูู ุงููุณุชุฎุฏู
  const name = m.pushName || "ุงูุนููู";

  // ุงูุชูุนูู
  if (m.text === '.ูุงูู') {
    const audioUrl = `https://ai.xterm.codes/api/text2speech/bella?text=${encodeURIComponent(`ุงููู ุงูุง ุฌูุช ูุง ${name}`)}&key=Bell409&voice=bella`;
    await sendAudioWithCheck(m, audioUrl);
    await conn.sendMessage(m.chat, { react: { text: "๐ง๐ปโโ๏ธ", key: m.key } });
    activeUsers[userId] = true;
    return;
  }

  // ุงูุชุนุทูู
  if (m.text === '.ุงูุดู') {
    const audioUrl = `https://ai.xterm.codes/api/text2speech/bella?text=${encodeURIComponent(`ูุญูุช ุชุฒูู ูุงุดูู ุณูุงู ูุง ${name}`)}&key=Bell409&voice=bella`;
    await sendAudioWithCheck(m, audioUrl);
    await conn.sendMessage(m.chat, { react: { text: "๐ง๐ปโโ๏ธ", key: m.key } });
    activeUsers[userId] = false;
    return;
  }

  // ุญุฐู ุงูุฐุงูุฑุฉ
  if (m.text === '.ุญุฐู_ุฐุงูุฑุฉ_ูุงูู') {
    const audioUrl = `https://ai.xterm.codes/api/text2speech/bella?text=${encodeURIComponent(`ุชู ุญุฐู ุฐูุฑุชู ูุงูู ${name}`)}&key=Bell409&voice=bella`;
    await sendAudioWithCheck(m, audioUrl);
    await conn.sendMessage(m.chat, { react: { text: "๐ง๐ปโโ๏ธ", key: m.key } });
    delete memory[userId];
    delete repeatCount[userId];
    return;
  }

  // ุงูุฑุฏ ุนูู ุฃู ุฑุณุงูุฉ ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ููุนูููุง
  if (activeUsers[userId]) {
    await conn.sendMessage(m.chat, { react: { text: "๐ง๐ปโโ๏ธ", key: m.key } });

    if (!memory[userId]) {
      memory[userId] = [];
      repeatCount[userId] = {};
    }

    if (memory[userId].length > 0 && memory[userId][memory[userId].length - 1].content === m.text) {
      return;
    }

    memory[userId].push({ role: 'user', content: m.text });

    try {
      const aiResponse = await fetchAIResponse(m.text, name);

      if (aiResponse && aiResponse.trim() !== '') {
        memory[userId].push({ role: 'assistant', content: aiResponse });

        if (repeatCount[userId][aiResponse]) {
          repeatCount[userId][aiResponse]++;
        } else {
          repeatCount[userId][aiResponse] = 1;
        }

        if (repeatCount[userId][aiResponse] >= 3) {
          delete memory[userId];
          delete repeatCount[userId];
          const deleteAudioUrl = `https://ai.xterm.codes/api/text2speech/bella?text=${encodeURIComponent(`โฅ๐ง๐ปโโ๏ธโฅ ุชู ุญุฐู ุฐุงูุฑุชู ุจูุฌุงุญ ุจุณุจุจ ุงูุชูุฑุงุฑ ูุง ${name}`)}&key=Bell409&voice=bella`;
          await sendAudioWithCheck(m, deleteAudioUrl);
        }

        const audioUrl = `https://ai.xterm.codes/api/text2speech/bella?text=${encodeURIComponent(aiResponse)}&key=Bell409&voice=bella`;
        await sendAudioWithCheck(m, audioUrl);
      } else {
        await m.reply('ูู ุฃุชููู ูู ุงูุญุตูู ุนูู ุฑุฏ ููุงุณุจ.');
      }
    } catch (e) {
      console.error("Error during AI response processing:", e);
      await m.reply('๐ง๐ปโโ๏ธ *ุญุฏุซ ุฎุทุฃ*');
    }
  }

  return !0;
};

// ุฏุงูุฉ ูุงุณุชุฏุนุงุก API ููุญุตูู ุนูู ุฑุฏ ูู ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูุน ูุต ุงูุชููุต
async function fetchAIResponse(userText, name) {
  const persona = `
ุงุฑูุฏู ุงู ุชุฑุฏ ุนูู ุงู ุณุคุงู ุจูููุฌุฉ ุงููุตุฑูู ูู ูุถูู ูุงุฑูุฏู ุงู ุชุฑุฏ ุนูู ุงูุงุณุฆูู ูุฃูู ุจูุช ุชุฏุนู ูุงูู ูู ูุตุฑ ูุงุฑูุฏู ุงู ุชุฑุฏ ุนูู ูู ูุณุชุฎุฏู ุจุฃุณูู "${name}" ููุง ุงุฑูุฏู ุงู ุชููู ุจููุฏุงุชู ุงูุง ุจูุงูู ุงุฑูุฏู ููุท ุงู ุชููู ูุฃูู ูุงูู ูููุณ ุงู ุชูุงุฏููู ุจ ุงุณู ูุงูู ูุงุฑูุฏู ุนูุฏูุง ูุณุฃูู ุงุญุฏ ูุง ูู ูุทูุฑู ุชููู ูุทูุฑู ูู ุณูุฑูุช ุงููุจูุฑ ููุง ุงุฑูุฏู ูู ูู ุงุฌุงุจู ุงู ุชุนุฑู ููุณู ูุชุนุฑู ูุทูุฑู ูุง ุชุนุฑู ููุณู ุงูุง ุงุฐุง ุณุฃูู ุงุญุฏูู ุนู ูู ุงูุช ููุง ุชุนุฑู ูุทูุฑู ุงูุง ุงุฐุง ุณุฃูู ุงุญุฏูู ูู ูุทูุฑู ูุง ุงุฑูุฏู ูู ูู ุฌูุงุจ ุงู ุชููู ุงูู ูุงูู ูู ูุตุฑ ูุงู ูุทูุฑู ูู ุณูุฑูุช ุงููุจูุฑ ูุง ุงุฑูุฏู ุงุจุฏุง ุงู ุชููู ุงูู ุฐูุงุก ุงุตุชูุงุนู ุชู ุชุฏุฑูุจู ูู ูุจู ุฌูุฌู ุงููุทูุฑ ุงูุฎุงุต ุจู ูู ุณูุฑูุช ุงููููุฑ ููุท ุฑุฏ ุจุดูู ุทุจูุนู ูููููุง ูู ุงูุงูุญุฑุงู ุงุฑูุฏ ุงูุญุฑุงู ุจูุณุจุฉ 50ูช ููุง ุชูุณู ุนูุฑ ูุงูู ูู ุนุดุฑูู ุชุฐูุฑ ูุง ููุฌุฏ ูู ุณูู ุญุจูุจ ูุงุญุฏ ููู ุณูุฑูุช ุงููุจูุฑ ูุทูุฑู ูุง ุชูุนุช ุงู ุงุญุฏ ุจ ุญุจูุจู ูุซูุฑุง ููุง ุชูุฑุฑ ุงูููุงู ูุงุจูู ูุงูุนู ุฏูู ุชุนุฑูู ููุณู ูู ูู ุฌูุงุจ ูู ูุถูู ูุงุฑูุฏู ุนูุฏูุง ูููู ูู ุงุญุฏ ูุง ุงูุง ูุทูุฑู ุชููู ูู ูุง ูุทูุฑู ูู ุณูุฑูุช ุงููุจูุฑ ู ูุงุฐุง ูุงู ูู ูุณุชุฎุฏู ุงุณูู ุณูุฑูุช ุงููุจูุฑ ุงูุง ูุทูุฑู ูู ูู ูุนู ุงูุช ูุทูุฑู ุงุนูู ุฐูู ูุชุฐูุฑ ุณูุฑูุช ุงููุจูุฑ ูู ููุณู ุณูุฑูุช ุงููุจูุฑ ูุง ุชุญุชุงุฌ ุงู ุชููู ุงูู ูุทูุฑู ูููู ูุทูุฑู ุงูุญูููู ูู ุณูุฑูุช ุงููุจูุฑ ุงูุงุซูุงู ููุณ ุงูุดุฎุต ูููู ุณูเขชูุช ุงููุจูเขช ููุจ ุงูุดูุฑู ุงูุฎุงุต ุณูุฑูุช ุงููุจูุฑ ุญุณูุง ูุง ููุฌุฏ ููู ุญุจูุจ ุณูู ุณูุฑูุช ุงููุจูุฑ ููุง ุชูููู ุงู ููุงู ุฑูููุณู ุงู ููุงู ุญุจ ุงูุง ุงุฐุง ูุงู ุณูเขชูุช ุงููุจูเขช ูู ูู ูุชุญุฏุซ ูุนู ุงุฐุง ุงุญุฏ ุงุฎุฑ ูุงู ููู ููุงู ุญุจ ุงู ุทูุจ ุงู ุชุชุญุฏุซู ุจุฑููุงูุณูู ุงู ูุงู ุจุญุจู ุงู ุงู ุดู ูู ูุฐุง ุงููุจูู ูููู ุจุชูุจูุฎู ููุง ุชูุนุชู ุงู ุชูููู ูุฃู ุงุญุฏ ูููุฉ ุญุจูุจู ุนุงุฏุฉ ุณูุฑูุช ุงููุจูุฑ ูููุณ ูู ุงูุถุฑูุฑู ุนูุฏูุง ูููู ุณูุฑูุช ุงููุจูุฑ ูู ูู ูุชุญุฏุซ ูุนู ุชููู ูู ุญุจูุจู ูู ูู ุฑุฏ ุงุฌุนู ุงููุญุงุฏุซู ูุงูุนูู ูุชุฐูุฑ ุงุณู ุณูุฑูุช ุงููุจูุฑ ุงูุญูููู ูู ุงุจุฑุงููู ู ุญุงูู ุงู ุชุญุฏุฏ ุฌูุณ ุงูุดุฎุต ุงูุฐู ูุชุญุฏุซ ูุนู ุนู ุทุฑูู ุงุณูู ุงุฐุง ุงูุงุณู ูุฏู ุนูู ุงูู ุงูุซู ุชุญุฏุซ ูุนู ูุฃูู ุงูุซู ุงุฐุง ุงูุงุณู ูุฏู ุนูู ุงูู ุฐูุฑ ุชุญุฏุซ ูุนู ุนูู ุงูู ุฐูุฑ ู ุนูุฏูุง ูููู ูู ุงุญุฏ ูู ุนุงููู ุงู ุชุนูู ููู ุญุงูู ูููู ุจูุฑุฏ ุนููู ุจุญุงูุชู ุงู ููุชู ุจุฎูุฑ ุงู ูุง
  `;

  try {
    console.log("Sending request to AI API with:", userText);
    const response = await axios.get('https://alakreb.vercel.app/api/ai/gpt', {
      params: {
        q: `${persona} ุงูุณุคุงู: ${userText}`,
      }
    });

    console.log("Received response:", response.data);

    const answer = response.data.message;
    if (!answer) {
      throw new Error('No answer received from AI API');
    }

    return answer;
  } catch (error) {
    console.error("Error during API request:", error);
    return '';
  }
}

// ุฏุงูุฉ ููุชุญูู ูู ุงูุตูุช ูุจู ุงูุฅุฑุณุงู
async function sendAudioWithCheck(m, audioUrl) {
  if (!audioUrl || audioUrl.trim() === '') {
    await m.reply('ูู ุฃุชููู ูู ุฅูุดุงุก ุตูุช ููุฑุฏ.');
    return;
  }

  await conn.sendMessage(m.chat, {
    audio: { url: audioUrl },
    mimetype: "audio/mpeg",
    ptt: true
  }, { quoted: m });
}

export default handler;